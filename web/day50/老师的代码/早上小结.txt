1.js引入三种方式
	1.在script标签内部 编写js代码
	2.使用外链接的方式，把js文件引入进来
	3.直接在html代码中嵌套js代码
	
三种方式的区别：
	方式1： 只能在当前页面使用
	方式2：多个页面可能都会使用同一份js代码
	方式3： 编写很简单的js代码
	

引入js的注意事项：
	1.使用外链接的方式，你不能在标签内部编写js代码，因为引入的js文件，会把你内部的js进行一个覆盖
	2.外链接的方式必须是双标签，不能是单标签
	
方式3注意事项：
	推荐使用方式：
		<a href="javascript:void(0);" onClick="alert(3)">点我呀</a>
		<a href="javascript:;" onClick="alert(3)">点我呀</a>


2.js存在的位置
	除了定义在title标签内部，其它地方都会生效
	
	官方推荐： 使用在title标签结尾，head标签内部

3. js基本语法
	
	在js中定义任意的数据类型我们都使用var来定义
	
	在js中属于number类型的有：  整数   小数
	
	数子类型的转换 
		Number("123")  把字符串转为数字类型，它只能转字符串类型的数字，非数字类型的字符串都不能进行一个转换得到的结果值为NaN
	
	判断js的类型：
		typeof  数据
		
		Number  数字类型
		boolean 布尔类型
		string   字符串类型
		object   对象类型
		

	js基本语法:
		1.js申明变量的时候,严格区分大小写
		2.js命名方式和java一样
		3.js申明数据类型的时候,统一使用var来表示
		

4. js运算符
	
	在js中认为是false的有： null 0  undefined  false  ""  NaN,其它的数据类型都为true
	&&  ||  ！
	
	&&： 它永远只会返回最后一个为true的，如果前面已经为false，那就直接返回为false对应的那个值
	
	||： 它永远只会返回第一个为true的值，如果都为false，那就返回最后一个为false对应的值
	
	！:它只会返回true或者false
	
	

	== : 相对等，只比较值，不比较类型 
	===:绝对等，不仅仅比较值，还要比较类型
	

5.js函数
	就类似于我们java中的方法
	
	语法格式：
		function 函数名(形参列表){
			函数主体
		}
		
		
	调用方式： 函数名(....);
	
 函数的返回值类型：你想返回就返回，你不想返回就不返回， 如果没有具体的返回值，它默认返回的是undefined
 
 
 6.什么时候得到是undefined
 	定义了变量，没有赋予值
 	
 	ReferenceError: a is not defined   a没有定义这个变量


7.js重载的问题
	在js中是没有重载一说，得出一个结论，建议大家在一个页面里面定义函数的时候，不要定义函数名重复了
	
	因为它永远只会执行最后一个函数，它和参数个数类型是无关的

8. js日志信息
	console.debug()
	console.log()
	console.dir()
	
9.匿名函数
	没有名字的函数就叫做匿名函数
	
	注意： 你不能直接申明匿名函数，你必须把匿名函数赋值给一个变量
	
	你把匿名函数看成就是一个对象，它可以做相应的赋值
